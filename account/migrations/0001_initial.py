# Generated by Django 4.2 on 2024-12-16 09:55

import account.managers
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('profile_image', models.ImageField(upload_to='user/image/')),
                ('phone_number', models.CharField(max_length=15, unique=True, validators=[django.core.validators.RegexValidator(message="Telefon raqami quyidagi formatda bo'lishi kerak: +998xxxxxxxxx yoki 998xxxxxxxxx yoki 8xxxxxxxxx", regex='^(\\+998|998|8)?(9[012345789]|3[3])[0-9]{7}$')])),
                ('status', models.CharField(choices=[('band', 'band'), ('band emas', 'band emas')], max_length=15)),
                ('role', models.CharField(choices=[('rahbar', 'rahbar'), ('dasturchi', 'dasturchi'), ('hodim', 'hodim')], max_length=15)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', account.managers.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Board',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=250)),
            ],
            options={
                'verbose_name': 'board',
                'verbose_name_plural': 'boards',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=250)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('comment', models.TextField()),
                ('board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='account.board')),
                ('developers', models.ManyToManyField(related_name='tasks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'task',
                'verbose_name_plural': 'tasks',
            },
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('comment', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='problem/images/')),
                ('status', models.CharField(choices=[('qabul qilinmagan', 'qabul qilinmagan'), ('jarayonda', 'jarayonda'), ('bajarildi', 'bajarildi')], default='qabul qilinmagan', max_length=25)),
                ('is_solved', models.BooleanField(default=False)),
                ('programmer_is_solve', models.BooleanField(default=False)),
                ('solve_date', models.DateField(blank=True, null=True)),
                ('solve_time', models.TimeField(blank=True, null=True)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('problem_solve_time', models.TimeField(blank=True, null=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='problems_employee', to=settings.AUTH_USER_MODEL)),
                ('programmer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='problems_programmer', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'problem',
                'verbose_name_plural': 'problems',
            },
        ),
        migrations.CreateModel(
            name='KeepBusy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('start_time', models.TimeField(auto_now_add=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('comment', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='keepbusy/images/')),
                ('programmer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='keepbusy', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'keep busy',
                'verbose_name_plural': 'keep busy',
            },
        ),
    ]
